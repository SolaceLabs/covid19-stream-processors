{%- macro javaClass(name, schema, properties, indentLevel, isStatic) %}
{%- set className = name | upperFirst %}
{% set indent1 = indentLevel | indent1 -%}
{% set indent2 = indentLevel | indent2 -%}
{% set indent3 = indentLevel | indent3 -%}
{{ indent1 }}public {% if isStatic %}static {% endif %} class {{ className }} {

{{ indent2 }}public {{ className }} () {
{{ indent2 }}}

{% if schema._json.type === 'array' %}
{%- set name = schema._json.title | camelCase -%}
{%- set type = name | upperFirst -%}
{%- set arrayType = type + '[]' %}
{{ indent2 }}public {{ className }} ({{ arrayType }} {{ name }}) {
{{ indent3 }}this.{{ name }} = {{ name }};
{{ indent2 }}}

{{ indent2 }}private {{ arrayType }} {{ name }};

{{ javaClass(type, null, schema._json.items.properties, indentLevel+1, true) }}

{% else -%}
{% set first = true %}
{{ indent2 }}public {{ className }} (
{%- for name, prop in properties -%}
{%- set name = name | camelCase -%}
{%- set typeInfo = [name, prop] | fixType -%}
{%- set type = typeInfo[0] -%}
{%- if first -%}
{%- set first = false -%}
{%- else -%}
, {% endif -%}
{{ type }} {{ name }}
{%- endfor -%}
) {
{% for name, prop in properties -%}
{%- set name = name | camelCase -%}
{{ indent3 }}this.{{ name }} = {{ name }};
{% endfor -%}
{{ indent2 }}}
{% endif -%}

{% for name, prop in properties -%}
{% set name = name | camelCase -%}
{% set typeInfo = [name, prop] | fixType -%}
{% set type = typeInfo[0] -%}
{% set isArrayOfObjects = typeInfo[1] %}
{{ indent2 }}private {{ type }} {{ name }};
{%- endfor -%}
{%- for name, prop in properties %}
{% set name = name | camelCase -%}
{% set typeInfo = [name, prop] | fixType -%}
{% set type = typeInfo[0] -%}
{% set isArrayOfObjects = typeInfo[1] %}
{{ indent2 }}public {{ type }} get{{- name | upperFirst }}() {
{{ indent3 }}return {{ name }};
{{ indent2 }}}

{{ indent2 }}public {{ className }} set{{- name | upperFirst }}({{ type }} {{ name }}) {
{{ indent3 }}this.{{-name }} = {{ name }};
{{ indent3 }}return this;
{{ indent2 }}}
{%- if indentLevel == 0 and  prop.type() === 'object' %}
{{ javaClass(name, null, prop.properties(), indentLevel+1, true) }}
{% endif -%}
{%- if indentLevel > 0 and prop.type === 'object' %}
{{ javaClass(name, null, prop.properties, indentLevel+1, true) }}
{% endif -%}
{%- if isArrayOfObjects %}
{{ javaClass(name, null, prop.items()._json.properties, indentLevel+1, true) }}
{% endif -%}
{%- if prop._json.enum %}

{{ indent2 }}public static enum {{ type }} { {{ prop._json.enum }} }
{% endif -%}
{%- endfor %}

{{ indent2 }}public String toString() {
{{ indent3 }}return "{{ className }} ["
{%- for name, prop in properties %}
{%- set name = name | camelCase %}
{{ indent3 }}+ " {{ name }}: " + {{ name }}
{%- endfor %}
{{ indent3 }}+ " ]";
{{ indent2 }}}
{{ indent1 }}}
{% endmacro -%}
